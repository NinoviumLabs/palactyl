<%- include('../components/head') %>

<body class="bg-[#10181e]" style="font-family: 'Space Grotesk', sans-serif;">
  <!-- Create server modal - <%= settings.name %> -->
  <%- include('../components/modal') %>
  <div>
    <%- include('../components/navigation') %>
    <div class="md:pl-64 flex flex-col flex-1 h-screen"> <%- include('../components/header') %>
      <main class="flex-1 pb-32">
        <div class="py-6">
          <% /* Skeleton loader, lasts about 0.3s to let the page content load */ %>
          <%- include('../components/skeleton') %>
          <div class="hidden max-w-screen-2xl pt-8 mx-auto px-4 sm:px-6 md:px-16" id="content">
            <div class="lg:flex lg:items-center lg:justify-between rounded-3xl mb-8">
              <div class="min-w-0 flex-1">
                <div class="flex">
                  <div class="relative">
                    <h2 class="text-xl font-semibold text-white sm:truncate tracking-tight"><%= req.session.userinfo.global_name %>, welcome back! ðŸ‘‹</h2>
                    <p class="text-sm font-normal text-zinc-400">View general information related to your resource quota, account and servers.</p>
                  </div>
                </div>
              </div>
              <div class="mt-5 flex lg:ml-4 lg:mt-0">
                <span class="sm:ml-3 mr-3">
                  <a href="../panel" type="button" class="inline-flex flex-1 items-center rounded-full border-none bg-[#0a9875] px-6 py-2.5 text-sm font-normal text-white ring-none focus:outline-none">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-5 mr-2">
                      <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 6H5.25A2.25 2.25 0 0 0 3 8.25v10.5A2.25 2.25 0 0 0 5.25 21h10.5A2.25 2.25 0 0 0 18 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25" />
                    </svg>                                             
                    Manage your servers
                  </a>
                </span>
              </div>
            </div>
            <%
               let ram = 0;
               let disk = 0;
               let cpu = 0;
               let servers = pterodactyl.relationships.servers.data.length;
               for (let i = 0, len = pterodactyl.relationships.servers.data.length; i < len; i++) {
                  ram = ram + (typeof pterodactyl.relationships.servers.data[i].attributes.limits.memory == "number" ? pterodactyl.relationships.servers.data[i].attributes.limits.memory : 0);
                  disk = disk + (typeof pterodactyl.relationships.servers.data[i].attributes.limits.disk == "number" ? pterodactyl.relationships.servers.data[i].attributes.limits.disk : 0);
                  cpu = cpu + (typeof pterodactyl.relationships.servers.data[i].attributes.limits.cpu == "number" ? pterodactyl.relationships.servers.data[i].attributes.limits.cpu : 0);
               }
            %>
            <%
            let totalMemory = packages.ram + extraresources.ram; // total available memory in MB
            let usedMemory = ram; // memory currently used in MB
            let memoryLeft = totalMemory - usedMemory; // calculate memory left in MB
            let memoryLeftPercent = (memoryLeft / totalMemory) * 100; // calculate the percentage of memory left
            %>
            <%
            let totaldisk = packages.disk + extraresources.disk; // total available disk in MB
            let useddisk = disk; // disk currently used in MB
            let diskLeft = totaldisk - useddisk; // calculate disk left in MB
            let diskLeftPercent = (diskLeft / totaldisk) * 100; // calculate the percentage of disk left
            %>
            <%
            let totalservers = packages.servers + extraresources.servers; // total available servers in MB
            let usedservers = servers; // servers currently used in MB
            let serversLeft = totalservers - usedservers; // calculate servers left in MB
            let serversLeftPercent = (serversLeft / totalservers) * 100; // calculate the percentage of servers left
            %>
            <%
            let totalCpu = packages.cpu + extraresources.cpu;
            let usedCpu = cpu; 
            let cpuLeft = totalCpu - usedCpu;
            let cpuLeftPercent = (cpuLeft / totalCpu) * 100;
            %>
            <div class="mt-5 grid grid-cols-1 gap-4 sm:grid-cols-2">
              <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                <div class="relative flex items-center space-x-3 rounded-2xl bg-[#162027]/30 shadow border-t border-white/5 px-6 py-5 transition bg-[#162027]/30">
                  <div class="flex-shrink-0 text-gray-500">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-7 h-7 text-[#0a9875] mr-2">
                      <path d="M12 9a1 1 0 0 1-1-1V3c0-.552.45-1.007.997-.93a7.004 7.004 0 0 1 5.933 5.933c.078.547-.378.997-.93.997h-5Z" />
                      <path d="M8.003 4.07C8.55 3.994 9 4.449 9 5v5a1 1 0 0 0 1 1h5c.552 0 1.008.45.93.997A7.001 7.001 0 0 1 2 11a7.002 7.002 0 0 1 6.003-6.93Z" />
                    </svg>                    
                  </div>
                  <div class="min-w-0 flex-1">
                    <a href="../store" class="focus:outline-none">
                      <span class="absolute inset-0" aria-hidden="true"></span>
                      <p class="text-sm font-semibold text-white"><%= packages.ram/1024 + extraresources.ram/1024 - ram/1024 %>GB available memory</p>
                      <span class="text-xs font-normal text-zinc-400">Usage: <%= ram %> MB / <%= packages.ram + extraresources.ram %> MB</span>
                    </a>
                  </div>
                </div>
                <div class="relative flex items-center space-x-3 rounded-2xl bg-[#162027]/30 shadow border-t border-white/5 px-6 py-5 transition bg-[#162027]/30">
                  <div class="flex-shrink-0 text-gray-500">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-7 h-7 text-[#0a9875] mr-2">
                      <path d="M14 6H6v8h8V6Z" />
                      <path fill-rule="evenodd" d="M9.25 3V1.75a.75.75 0 0 1 1.5 0V3h1.5V1.75a.75.75 0 0 1 1.5 0V3h.5A2.75 2.75 0 0 1 17 5.75v.5h1.25a.75.75 0 0 1 0 1.5H17v1.5h1.25a.75.75 0 0 1 0 1.5H17v1.5h1.25a.75.75 0 0 1 0 1.5H17v.5A2.75 2.75 0 0 1 14.25 17h-.5v1.25a.75.75 0 0 1-1.5 0V17h-1.5v1.25a.75.75 0 0 1-1.5 0V17h-1.5v1.25a.75.75 0 0 1-1.5 0V17h-.5A2.75 2.75 0 0 1 3 14.25v-.5H1.75a.75.75 0 0 1 0-1.5H3v-1.5H1.75a.75.75 0 0 1 0-1.5H3v-1.5H1.75a.75.75 0 0 1 0-1.5H3v-.5A2.75 2.75 0 0 1 5.75 3h.5V1.75a.75.75 0 0 1 1.5 0V3h1.5ZM4.5 5.75c0-.69.56-1.25 1.25-1.25h8.5c.69 0 1.25.56 1.25 1.25v8.5c0 .69-.56 1.25-1.25 1.25h-8.5c-.69 0-1.25-.56-1.25-1.25v-8.5Z" clip-rule="evenodd" />
                    </svg>                        
                  </div>
                  <div class="min-w-0 flex-1">
                    <a href="../store" class="focus:outline-none">
                      <span class="absolute inset-0" aria-hidden="true"></span>
                      <p class="text-sm font-semibold text-white"><%= packages.cpu/100 + extraresources.cpu/100 - cpu/100 %> available CPU core(s)</p>
                      <span class="text-xs font-normal text-zinc-400">Usage: <%= cpu %> % / <%= packages.cpu + extraresources.cpu %> %</span>
                    </a>
                  </div>
                  </div>
                  <div class="relative flex items-center space-x-3 rounded-2xl bg-[#162027]/30 shadow border-t border-white/5 px-6 py-5 transition bg-[#162027]/30">
                    <div class="flex-shrink-0 text-gray-500">
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-7 h-7 text-[#0a9875] mr-2">
                        <path d="M4.75 3A1.75 1.75 0 0 0 3 4.75v2.752l.104-.002h13.792c.035 0 .07 0 .104.002V6.75A1.75 1.75 0 0 0 15.25 5h-3.836a.25.25 0 0 1-.177-.073L9.823 3.513A1.75 1.75 0 0 0 8.586 3H4.75ZM3.104 9a1.75 1.75 0 0 0-1.673 2.265l1.385 4.5A1.75 1.75 0 0 0 4.488 17h11.023a1.75 1.75 0 0 0 1.673-1.235l1.384-4.5A1.75 1.75 0 0 0 16.896 9H3.104Z" />
                      </svg>                      
                    </div>
                    <div class="min-w-0 flex-1">
                      <a href="../store" class="focus:outline-none">
                        <span class="absolute inset-0" aria-hidden="true"></span>
                        <p class="text-sm font-semibold text-white"><%= packages.disk/1024 + extraresources.disk/1024 - disk/1024 %> GB available disk</p>
                        <span class="text-xs font-normal text-zinc-400">Usage: <%= disk %> MB / <%= packages.disk + extraresources.disk %> MB</span>
                      </a>
                    </div>
                    </div>
                    <div class="relative flex items-center space-x-3 rounded-2xl bg-[#162027]/30 shadow border-t border-white/5 px-6 py-5 transition bg-[#162027]/30">
                      <div class="flex-shrink-0 text-gray-500">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-7 h-7 text-[#0a9875] mr-2">
                          <path d="M4.464 3.162A2 2 0 0 1 6.28 2h7.44a2 2 0 0 1 1.816 1.162l1.154 2.5c.067.145.115.291.145.438A3.508 3.508 0 0 0 16 6H4c-.288 0-.568.035-.835.1.03-.147.078-.293.145-.438l1.154-2.5Z" />
                          <path fill-rule="evenodd" d="M2 9.5a2 2 0 0 1 2-2h12a2 2 0 1 1 0 4H4a2 2 0 0 1-2-2Zm13.24 0a.75.75 0 0 1 .75-.75H16a.75.75 0 0 1 .75.75v.01a.75.75 0 0 1-.75.75h-.01a.75.75 0 0 1-.75-.75V9.5Zm-2.25-.75a.75.75 0 0 0-.75.75v.01c0 .414.336.75.75.75H13a.75.75 0 0 0 .75-.75V9.5a.75.75 0 0 0-.75-.75h-.01ZM2 15a2 2 0 0 1 2-2h12a2 2 0 1 1 0 4H4a2 2 0 0 1-2-2Zm13.24 0a.75.75 0 0 1 .75-.75H16a.75.75 0 0 1 .75.75v.01a.75.75 0 0 1-.75.75h-.01a.75.75 0 0 1-.75-.75V15Zm-2.25-.75a.75.75 0 0 0-.75.75v.01c0 .414.336.75.75.75H13a.75.75 0 0 0 .75-.75V15a.75.75 0 0 0-.75-.75h-.01Z" clip-rule="evenodd" />
                        </svg>                                         
                      </div>
                      <div class="min-w-0 flex-1">
                        <a href="../store" class="focus:outline-none">
                          <span class="absolute inset-0" aria-hidden="true"></span>
                          <p class="text-sm font-semibold text-white"><%= packages.servers + extraresources.servers - servers %> available server slots</p>
                          <span class="text-xs font-normal text-zinc-400">Usage: <%= servers %> / <%= packages.servers + extraresources.servers %></span>
                        </a>
                      </div>
                </div>
              </div>
              <div class="w-full rounded-2xl border-t border-white/5 bg-cover bg-center bg-no-repeat p-10 flex flex-col items-center justify-center" style="background-image: url('https://berrybyte.net/assets/games/minecraft-hero-new-3.png');">
                <h2 class="tracking-widest uppercase text-white/80 font-semibold text-2xl mb-1">Create a server</h2>
                <p class="text-white/50 text-md mb-8">Create your own free Minecraft server today.</p>
                <button onclick="toggleModal()" class="bg-[#162027]/30 border-t border-white/5 ring-offset-[#272a34] backdrop-blur shadow-lg hover:bg-white/10 text-white font-medium py-2 px-6 rounded-2xl transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#0a9875]">
                  New Server
                </button>
              </div>
            </div>
            <div class="mt-5 grid grid-cols-1 gap-4 sm:grid-cols-1">
              <div class="rounded-2xl bg-[#162027]/30 shadow border-t border-white/5">
                <div class="px-4 py-5 sm:p-6">
                  <div class="sm:flex sm:items-start sm:justify-between">
                    <div>
                      <h3 class="text-base font-semibold leading-6 text-white">Daily reward</h3>
                      <div class="mt-2 max-w-xl text-sm text-zinc-400">
                        <p>Each day, you can claim <%= settings.api.client.coins.dailyReward %> <%= settings.website.coins %> for free. <span class="reward-status-text text-zinc-300">You can claim next in -.</span></p>
                      </div>
                    </div>
                    <div class="left-0 sm:ml-6 sm:mt-0 sm:flex sm:flex-shrink-0 sm:items-center">
                      <button type="button" class="claim-reward-button inline-flex flex-1 items-center rounded-full border-none bg-[#0a9875] px-6 py-2.5 text-sm font-normal text-white ring-none focus:outline-none">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-5 mr-2">
                          <path stroke-linecap="round" stroke-linejoin="round" d="M21 11.25v8.25a1.5 1.5 0 0 1-1.5 1.5H5.25a1.5 1.5 0 0 1-1.5-1.5v-8.25M12 4.875A2.625 2.625 0 1 0 9.375 7.5H12m0-2.625V7.5m0-2.625A2.625 2.625 0 1 1 14.625 7.5H12m0 0V21m-8.625-9.75h18c.621 0 1.125-.504 1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125h-18c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125Z" />
                        </svg>                                                                 
                        Claim reward
                     </button>
                    </div>
                  </div>
                </div>
                <script>
                  document.addEventListener('DOMContentLoaded', function() {
                    const claimButton = document.querySelector('.claim-reward-button');
                    const statusText = document.querySelector('.reward-status-text');
                  
                    // Function to update the status of the next reward claim
                    function updateRewardStatus() {
                      fetch('/reward-status')
                        .then(response => response.json())
                        .then(data => {
                          if (data.claimable) {
                            statusText.textContent = 'You can claim your <%= settings.api.client.coins.dailyReward %> <%= settings.website.coins %> now!';
                            claimButton.disabled = false;
                          } else {
                            claimButton.disabled = true;
                            claimButton.classList.add("opacity-30")
                            const nextClaimInMinutes = Math.ceil(data.nextClaimIn / 60000);
                            statusText.textContent = `You can claim next in ${nextClaimInMinutes} minutes.`;
                          }
                        })
                        .catch(error => {
                          console.error('Error:', error);
                          statusText.textContent = 'Failed to retrieve reward status.';
                        });
                    }
                  
                    // Event listener for the claim button
                    claimButton.addEventListener('click', function() {
                      fetch('/claim-reward', { method: 'POST' })
                        .then(response => {
                          if (response.ok) {
                            return response.text();
                          } else {
                            throw new Error('Reward already claimed or another error occurred.');
                          }
                        })
                        .then(message => {
                          location.reload()
                          updateRewardStatus();  // Update status after claiming
                        })
                        .catch(error => {
                          alert(error.message);
                          updateRewardStatus();
                        });
                    });
                  
                    // Update reward status on page load and every minute to keep it synced
                    updateRewardStatus();
                    setInterval(updateRewardStatus, 60000);  // Update status every minute
                  });
                  </script>                  
            </div>
          </div>
        </div>
                      
      </main>
      <%- include('../components/footer') %>
    </div>
  </div>
                    
</body>
<script>
function toggleModal() {
  window.dispatchEvent(new CustomEvent('toggle-modal'));
}

    function selectLocation(name) {
      const previous = document.querySelector('.location-card.card-selected');
      if (previous) {
        previous.classList.remove('card-selected');
      }
      const selected = document.querySelector(`.location-card[data-name="${name}"]`);
      selected.classList.add('card-selected');
      document.getElementById('InputLoc').value = name;
    }
  
    function selectEgg(name) {
      const previous = document.querySelector('.egg-card.card-selected');
      if (previous) {
        previous.classList.remove('card-selected');
      }
      const selected = document.querySelector(`.egg-card[data-name="${name}"]`);
      selected.classList.add('card-selected');
      document.getElementById('InputEgg').value = name;
    }
  
    async function submitNew() {
      let name = encodeURIComponent(document.getElementById("InputName").value);
      let egg = encodeURIComponent(document.getElementById("InputEgg").value);
      let ram = encodeURIComponent(document.getElementById("InputRAM").value * 1024);
      let disk = encodeURIComponent(document.getElementById("InputDisk").value * 1024);
      let cpu = encodeURIComponent(document.getElementById("InputCPU").value * 100);
      let location = encodeURIComponent(document.getElementById("InputLoc").value);
      document.location.href = `/create?name=${name}&egg=${egg}&ram=${ram}&disk=${disk}&cpu=${cpu}&location=${location}`;
    };
  </script>
